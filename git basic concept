#This file contains a basic git concept
#This line is changed from develop branch
#This line is also changed from develop branch

commit c340a301256a258f671c14e07d2c933f6c835ccd (HEAD -> main, origin/main)
After the clone, the main and origin/main both point to a common commit id.
#Remote: main or master is a default branch and always points to a commit id.
          Whenever, you clone, it will download the content from the commit id main points currently
#Local: in local origin/main or origin/master represents the remote branch which has a copy in local
         and master/main represents the local master/main branch
         #origin/main points to a commit id which you fetch last time from the remote main branch
         Now, if you perform a commit, the main points to that commit are not pushed yet.
         Now consider scenario 1: Someone else pushed his commit to the main(remote repo).
         In that case, your local copy origin/main will still point to the previous commit id(last time you fetch it)
         So, remote main points to a commit id and your local origin/main points to a commit id are different.
         scenario 2: You committed a change 
                     Your main and origin/main will point to a different commit id.
                     However, as soon as you push the commit to the remote repo they will point to the same commit id as now git knows you 
                     pushed the commit to the remote repo.

           Scenario 1 Example : 
        $ git log
         commit c340a301256a258f671c14e07d2c933f6c835ccd (HEAD -> main, origin/main, origin/HEAD, develop)
         Author: SK Tuhin Islam <35400643+ttuhin@users.noreply.github.com>
         Date:   Sun Mar 19 18:50:07 2023 +0600

        Create basic command

         #This file contains the basic git command
         
         Local, we can see the origin/main points to  commit c340a301256a258f671c14e07d2c933f6c835ccd
         but in remote it is  36ce3d368b16dc28519e9c1351772dc62e23169a
         
     $ git fetch origin
        remote: Enumerating objects: 5, done.
        remote: Counting objects: 100% (5/5), done.
        remote: Compressing objects: 100% (2/2), done.
        remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
        Unpacking objects: 100% (3/3), 1.16 KiB | 91.00 KiB/s, done.
        From github.com:ttuhin/practice
        c340a30..36ce3d3  main       -> origin/main

     $ git rebase origin
       Successfully rebased and updated refs/heads/main.
       
     $ git log
         commit 36ce3d368b16dc28519e9c1351772dc62e23169a (HEAD -> main, origin/main, origin/HEAD)
         Author: SK Tuhin Islam <35400643+ttuhin@users.noreply.github.com>
         Date:   Sun Mar 19 19:52:51 2023 +0600
         Update basic command
         
         After getting the changes from the remote main by fetch and rebase now you can see that
         both origin/main and main points to commit 36ce3d368b16dc28519e9c1351772dc62e23169a
